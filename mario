<!DOCTYPE html>
<html>
<head>
    <title>Mario en JavaScript</title>
    <script src="https://cdn.jsdelivr.net/npm/phaser@3.55.2/dist/phaser.min.js"></script>
</head>
<body>
    <script src="js/config.js"></script>
    <script src="js/mario.js"></script>
    <script src="js/game.js"></script>
</body>
</html>
const config = {
    type: Phaser.AUTO,
    width: 800,
    height: 600,
    physics: {
        default: 'arcade',
        arcade: { gravity: { y: 300 }, debug: false }
    },
    scene: {
        preload: preload,
        create: create,
        update: update
    }
};

const game = new Phaser.Game(config);
let mario, plateformes, cursors;
function preload() {
    this.load.image('ciel', 'assets/bg.png');
    this.load.image('sol', 'assets/ground.png');
    this.load.spritesheet('mario', 'assets/sprites/mario.png', {
        frameWidth: 32, frameHeight: 48
    });
}

function create() {
    // Arrière-plan
    this.add.image(400, 300, 'ciel');
    
    // Plateformes
    plateformes = this.physics.add.staticGroup();
    plateformes.create(400, 568, 'sol').setScale(2).refreshBody();
    
    // Mario
    mario = this.physics.add.sprite(100, 450, 'mario');
    mario.setBounce(0.2);
    mario.setCollideWorldBounds(true);
    this.physics.add.collider(mario, plateformes);
    
    // Animations
    this.anims.create({
        key: 'course',
        frames: this.anims.generateFrameNumbers('mario', { start: 0, end: 3 }),
        frameRate: 10,
        repeat: -1
    });
    
    // Contrôles
    cursors = this.input.keyboard.createCursorKeys();
}

function update() {
    if (cursors.left.isDown) {
        mario.setVelocityX(-160);
        mario.anims.play('course', true);
        mario.flipX = true;
    } else if (cursors.right.isDown) {
        mario.setVelocityX(160);
        mario.anims.play('course', true);
        mario.flipX = false;
    } else {
        mario.setVelocityX(0);
        mario.anims.stop();
    }
    
    if (cursors.up.isDown && mario.body.touching.down) {
        mario.setVelocityY(-330);
    }
}
// Dans create()
ennemis = this.physics.add.group();
this.physics.add.collider(ennemis, plateformes);
this.physics.add.overlap(mario, ennemis, hitEnnemi, null, this);

function hitEnnemi(mario, ennemi) {
    if (mario.body.touching.down && ennemi.body.touching.up) {
        ennemi.destroy(); // Mario saute sur l'ennemi
    } else {
        // Perdre une vie
    }
}
// Préchargement
this.load.audio('saut', 'assets/sounds/jump.wav');

// Utilisation
const sautSFX = this.sound.add('saut');
if (cursors.up.isDown) {
    sautSFX.play();
}
npx http-server
